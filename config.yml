name: ELK
label: 4.0.1
logo_url: ""
page_title: ""
release_notes: Updated Kibana to 4.0.1 and Elasticsearch to 1.4.4
properties:
  url: http{{ if ConfigOptionEquals "https_enabled" "1" }}s{{ end }}://{{ ConfigOption
    "hostname" }}
components:
- name: Elasticsearch
  containers:
  - source: public
    image_name: getelk/elasticsearch
    version: 1.4.4-9
    cmd: ""
    publish_events:
    - name: Container getelk/elasticsearch started
      trigger: container-start
      data: ""
      subscriptions:
      - component: Logstash & Kibana
        container: getelk/logstash
        action: start
      - component: Logstash & Kibana
        container: getelk/kibana
        action: start
    config_files:
    - filename: /elasticsearch/config/elasticsearch.yml
      contents: |
        path:
          data: /data/data
          logs: /data/log
          plugins: /data/plugins
          work: /data/work
        http.cors.enabled: true
        http.cors.allow-origin: http://{{ ConfigOption "hostname" }}
    customer_files: []
    env_vars: []
    ports:
    - private_port: "9200"
      public_port: "9200"
      port_type: tcp
      when: ""
    volumes:
    - host_path: /data
      container_path: /data
    support_files: []
- name: Logstash & Kibana
  containers:
  - source: public
    image_name: getelk/logstash
    version: 1.4.2-7
    cmd: ""
    publish_events:
    - name: Container getelk/logstash started
      trigger: container-start
      data: ""
      subscriptions: []
    config_files:
    - filename: /opt/conf/logstash.conf
      contents: |
        input {
          {{ if ConfigOptionEquals "logstash_input_collectd_enabled" "1" }}
          collectd {
            typesdb => ["/opt/collectd-types.db"]
            port => {{ ConfigOption "logstash_input_collectd_port" }}
          }
          {{ end }}
          {{ if ConfigOptionEquals "logstash_input_file_enabled" "1" }}
          file {
            path => ["{{ ConfigOption "logstash_input_file_path" }}"]
          }
          {{ end }}
          {{ if ConfigOptionEquals "logstash_input_ganglia_enabled" "1" }}
          ganglia {
            port => {{ ConfigOption "logstash_input_ganglia_port" }}
          }
          {{ end }}
          {{ if ConfigOptionEquals "logstash_input_generator_enabled" "1" }}
          generator {
            count => {{ ConfigOption "logstash_input_generator_count" }}
          }
          {{ end }}
          {{ if ConfigOptionEquals "logstash_input_log4j_enabled" "1" }}
          log4j {
            port => {{ ConfigOption "logstash_input_log4j_port" }}
          }
          {{ end }}
          {{ if ConfigOptionEquals "logstash_input_lumberjack_enabled" "1" }}
          lumberjack {
            port => {{ ConfigOption "logstash_input_lumberjack_port" }}
            ssl_certificate => "/opt/certs/logstash-forwarder.crt"
            ssl_key => "/opt/certs/logstash-forwarder.key"
          }
          {{ end }}
          {{ if ConfigOptionEquals "logstash_input_rabbitmq_enabled" "1" }}
          rabbitmq {
            host => "{{ ConfigOption "logstash_input_rabbitmq_host" }}"
            port => {{ ConfigOption "logstash_input_rabbitmq_port" }}
          }
          {{ end }}
          {{ if ConfigOptionEquals "logstash_input_snmp_enabled" "1" }}
          snmptrap {
            port => {{ ConfigOption "logstash_input_snmp_port" }}
          }
          {{ end }}
          {{ if ConfigOptionEquals "logstash_input_sqs_enabled" "1" }}
          sqs {
            queue => "{{ ConfigOption "logstash_input_sqs_queue" }}"
          }
          {{ end }}
          {{ if ConfigOptionEquals "logstash_input_syslog_enabled" "1" }}
          syslog {
            port => {{ ConfigOption "logstash_input_syslog_port" }}
          }
          {{ end }}
          {{ if ConfigOptionEquals "logstash_input_tcp_enabled" "1" }}
          tcp {
            port => {{ ConfigOption "logstash_input_tcp_port" }}
          }
          {{ end }}
          {{ if ConfigOptionEquals "logstash_input_udp_enabled" "1" }}
          udp {
            port => {{ ConfigOption "logstash_input_udp_port" }}
          }
          {{ end }}
          {{ if ConfigOptionEquals "logstash_input_unix_enabled" "1" }}
          unix {
            path => "{{ ConfigOption "logstash_input_unix_path" }}"
          }
          {{ end }}
          {{ if ConfigOptionEquals "logstash_input_websocket_enabled" "1" }}
          websocket {
            url => "{{ ConfigOption "logstash_input_websocket_url" }}"
          }
          {{ end }}
          {{ if ConfigOptionEquals "logstash_input_zeromq_enabled" "1" }}
          zeromq {
            address => "{{ ConfigOption "logstash_input_zeromq_address" }}"
            topology => "{{ ConfigOption "logstash_input_zeromq_topology" }}"
          }
          {{ end }}
        }

        filter {
        }

        output {
          elasticsearch {
            host => "{{ HostPrivateIpAddress "Elasticsearch" "getelk/elasticsearch" }}"
            port => "{{ ContainerExposedPort "Elasticsearch" "getelk/elasticsearch" "9300" }}"
          }

          {{ if ConfigOptionEquals "logstash_output_rollbar_enabled" "1" }}
          rollbar {
            access_token => "{{ ConfigOption "logstash_output_rollbar_access_token" }}"
            environment => "{{ ConfigOption "logstash_output_rollbar_environment" }}"
            level => "{{ ConfigOption "logstash_output_rollbar_level" }}"
            format => "{{ ConfigOption "logstash_output_rollbar_format" }}"
          }
          {{ end }}
        }
    customer_files:
    - name: logstash_input_lumberjack_cert_file
      filename: /opt/certs/logstash-forwarder.crt
    - name: logstash_input_lumberjack_key_file
      filename: /opt/certs/logstash-forwarder.key
    env_vars:
    - name: AWS_ACCESS_KEY_ID
      static_val: '{{ ConfigOption "logstash_input_sqs_aws_access_key" }}'
    - name: AWS_SECRET_ACCESS_KEY
      static_val: '{{ ConfigOption "logstash_input_sqs_aws_secret_key" }}'
    ports:
    - private_port: '{{ ConfigOption "logstash_input_collectd_port" }}'
      public_port: '{{ ConfigOption "logstash_input_collectd_port" }}'
      port_type: tcp
      when: '{{ ConfigOptionEquals "logstash_input_collectd_enabled" "1" }}'
    - private_port: '{{ ConfigOption "logstash_input_tcp_port" }}'
      public_port: '{{ ConfigOption "logstash_input_tcp_port" }}'
      port_type: tcp
      when: '{{ ConfigOptionEquals "logstash_input_tcp_enabled" "1" }}'
    - private_port: '{{ ConfigOption "logstash_input_udp_port" }}'
      public_port: '{{ ConfigOption "logstash_input_udp_port" }}'
      port_type: tcp
      when: '{{ ConfigOptionEquals "logstash_input_udp_enabled" "1" }}'
    - private_port: '{{ ConfigOption "logstash_input_snmp_port" }}'
      public_port: '{{ ConfigOption "logstash_input_snmp_port" }}'
      port_type: tcp
      when: '{{ ConfigOptionEquals "logstash_input_snmp_enabled" "1" }}'
    - private_port: '{{ ConfigOption "logstash_input_syslog_port" }}'
      public_port: '{{ ConfigOption "logstash_input_syslog_port" }}'
      port_type: tcp
      when: '{{ ConfigOptionEquals "logstash_input_syslog_enabled" "1" }}'
    - private_port: "25826"
      public_port: "25826"
      port_type: tcp
      when: '{{ ConfigOptionEquals "logstash_input_collectd_enabled" "1" }}'
    - private_port: '{{ ConfigOption "logstash_input_ganglia_port" }}'
      public_port: '{{ ConfigOption "logstash_input_ganglia_port" }}'
      port_type: tcp
      when: '{{ ConfigOptionEquals "logstash_input_ganglia_enabled" "1" }}'
    - private_port: '{{ ConfigOption "logstash_input_lumberjack_port" }}'
      public_port: '{{ ConfigOption "logstash_input_lumberjack_port" }}'
      port_type: tcp
      when: '{{ ConfigOptionEquals "logstash_input_lumberjack_enabled" "1" }}'
    volumes: []
    support_files: []
  - source: public
    image_name: getelk/kibana
    version: 4.0.1-6
    cmd: ""
    publish_events:
    - name: Container getelk/kibana started
      trigger: container-start
      data: ""
      subscriptions:
      - component: SSL/Authentication
        container: getelk/auth
        action: start
    config_files:
    - filename: /opt/kibana/config/kibana.yml
      contents: |
        # Kibana is served by a back end server. This controls which port to use.
        port: 5601

        # The host to bind the server to.
        host: "0.0.0.0"

        # The Elasticsearch instance to use for all your queries.
        elasticsearch_url: "http://{{ ConfigOption "hostname" }}:9200"

        # preserve_elasticsearch_host true will send the hostname specified in `elasticsearch`. If you set it to false,
        # then the host you use to connect to *this* Kibana instance will be sent.
        elasticsearch_preserve_host: true

        # Kibana uses an index in Elasticsearch to store saved searches, visualizations
        # and dashboards. It will create a new index if it doesn't already exist.
        kibana_index: ".kibana"

        # If your Elasticsearch is protected with basic auth, this is the user credentials
        # used by the Kibana server to perform maintence on the kibana_index at statup. Your Kibana
        # users will still need to authenticate with Elasticsearch (which is proxied thorugh
        # the Kibana server)
        # kibana_elasticsearch_username: user
        # kibana_elasticsearch_password: pass


        # The default application to load.
        default_app_id: "discover"

        # Time in milliseconds to wait for responses from the back end or elasticsearch.
        # This must be > 0
        request_timeout: 300000

        # Time in milliseconds for Elasticsearch to wait for responses from shards.
        # Set to 0 to disable.
        shard_timeout: 0

        # Set to false to have a complete disregard for the validity of the SSL
        # certificate.
        verify_ssl: true

        # If you need to provide a CA certificate for your Elasticsarech instance, put
        # the path of the pem file here.
        # ca: /path/to/your/CA.pem

        # SSL for outgoing requests from the Kibana Server (PEM formatted)
        # ssl_key_file: /path/to/your/server.key
        # ssl_cert_file: /path/to/your/server.crt

        # Set the path to where you would like the process id file to be created.
        # pid_file: /var/run/kibana.pid


        # Plugins that are included in the build, and no longer found in the plugins/ folder
        bundled_plugin_ids:
         - plugins/dashboard/index
         - plugins/discover/index
         - plugins/doc/index
         - plugins/kibana/index
         - plugins/markdown_vis/index
         - plugins/metric_vis/index
         - plugins/settings/index
         - plugins/table_vis/index
         - plugins/vis_types/index
         - plugins/visualize/index
    customer_files: []
    env_vars: []
    ports: []
    volumes: []
    support_files: []
- name: SSL/Authentication
  containers:
  - source: public
    image_name: nginx
    version: 1.7.10
    cmd: ""
    publish_events:
    - name: Container nginx started
      trigger: container-start
      data: ""
      subscriptions: []
    config_files:
    - filename: /etc/nginx/nginx.conf
      contents: |
        user  nginx;
        worker_processes  1;

        error_log  /var/log/nginx/error.log warn;
        pid        /var/run/nginx.pid;


        events {
            worker_connections  1024;
        }


        http {
            include       /etc/nginx/mime.types;
            default_type  application/octet-stream;

            log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                              '$status $body_bytes_sent "$http_referer" '
                              '"$http_user_agent" "$http_x_forwarded_for"';

            access_log  /var/log/nginx/access.log  main;

            sendfile        on;
            #tcp_nopush     on;

            keepalive_timeout  65;

            #gzip  on;

            ssl_session_cache   shared:SSL:10m;
            ssl_session_timeout 10m;

            {{ if ConfigOptionEquals "http_enabled" "1" }}
              server {
                  listen      80 default_server;
                  server_name {{ ConfigOption "hostname" }};

                  # TODO: add for all except anonymous authentication type
                  {{ if ConfigOptionEquals "authentication_type" "authentication_type_password" }}
                  error_page 401 = @error401;
                  location @error401 {
                      return 302 $scheme://$server_name:$server_port/replicated-auth/sign-in;
                  }

                  location = /replicated-auth/sign-in {
                      rewrite           .* /sign-in break;
                      proxy_pass        http://{{ HostPrivateIpAddress "SSL/Authentication" "getelk/auth" }}:{{ ContainerExposedPort "SSL/Authentication" "getelk/auth" "8080" }};
                      proxy_set_header  X-Real-IP $remote_addr;
                      proxy_set_header  Host $host;
                      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
                  }

                  location = /replicated-auth/authcheck {
                      internal;

                      rewrite           .* / break;
                      proxy_pass        http://{{ HostPrivateIpAddress "SSL/Authentication" "getelk/auth" }}:{{ ContainerExposedPort "SSL/Authentication" "getelk/auth" "8080" }};
                      proxy_set_header  X-Real-IP $remote_addr;
                      proxy_set_header  Host $host;
                      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
                  }
                  {{ end }}

                  location / {
                    {{ if ConfigOptionEquals "authentication_type" "authentication_type_password" }}
                    auth_request /replicated-auth/authcheck;
                    {{ end }}
                    proxy_pass       http://{{ HostPrivateIpAddress "Logstash & Kibana" "getelk/kibana" }}:{{ ContainerExposedPort "Logstash & Kibana" "getelk/kibana" "5601" }};
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header Host $host;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  }

              }
            {{ end }}

            {{ if ConfigOptionEquals "https_enabled" "1" }}
              server {
                  listen              443 ssl;
                  server_name         {{ ConfigOption "hostname" }};
                  keepalive_timeout   70;

                  ssl_certificate     /opt/certs/server.crt;
                  ssl_certificate_key /opt/certs/server.key;
                  ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
                  ssl_ciphers         HIGH:!aNULL:!MD5;

                  # TODO: add for all except anonymous authentication type
                  {{ if ConfigOptionEquals "authentication_type" "authentication_type_password" }}
                  error_page 401 = @error401;
                  location @error401 {
                      return 302 $scheme://$server_name:$server_port/replicated-auth/sign-in;
                  }

                  location = /replicated-auth/sign-in {
                      rewrite           .* /sign-in break;
                      proxy_pass        http://{{ HostPrivateIpAddress "SSL/Authentication" "getelk/auth" }}:{{ ContainerExposedPort "SSL/Authentication" "getelk/auth" "8080" }};
                      proxy_set_header  X-Real-IP $remote_addr;
                      proxy_set_header  Host $host;
                      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
                  }

                  location = /replicated-auth/authcheck {
                      internal;

                      rewrite           .* / break;
                      proxy_pass        http://{{ HostPrivateIpAddress "SSL/Authentication" "getelk/auth" }}:{{ ContainerExposedPort "SSL/Authentication" "getelk/auth" "8080" }};
                      proxy_set_header  X-Real-IP $remote_addr;
                      proxy_set_header  Host $host;
                      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
                  }
                  {{ end }}

                  location / {
                    {{ if ConfigOptionEquals "authentication_type" "authentication_type_password" }}
                    auth_request /replicated-auth/authcheck;
                    {{ end }}
                    proxy_pass       http://{{ HostPrivateIpAddress "Logstash & Kibana" "getelk/kibana" }}:{{ ContainerExposedPort "Logstash & Kibana" "getelk/kibana" "5601" }};
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header Host $host;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  }

              }
            {{ end }}
        }
    customer_files:
    - name: ssl_cert_file
      filename: /opt/certs/server.crt
    - name: ssl_key_file
      filename: /opt/certs/server.key
    env_vars: []
    ports:
    - private_port: "80"
      public_port: "80"
      port_type: tcp
      when: '{{ ConfigOptionEquals "http_enabled" "1" }}'
    - private_port: "443"
      public_port: "443"
      port_type: tcp
      when: '{{ ConfigOptionEquals "https_enabled" "1" }}'
    volumes: []
    support_files: []
  - source: public
    image_name: getelk/auth
    version: 0.3.2
    cmd: ""
    publish_events:
    - name: Container getelk/auth started
      trigger: container-start
      data: ""
      subscriptions:
      - component: SSL/Authentication
        container: nginx
        action: start
    config_files:
    - filename: /root/config.yaml
      contents: |
        hostaddress: :8080
        {{ if ConfigOptionEquals "authentication_type" "authentication_type_password" }}
        authtype: password
        {{ else }}
        authtype: anonymous
        {{ end }}
        cookiename: replicated-auth
        expiration: 86400
        supportemail: {{ ConfigOption "authentication_support_email" }}
    customer_files: []
    env_vars:
    - name: REPLICATED_AUTH_PASSWORD
      static_val: '{{ ConfigOption "authentication_type_password_password" }}'
    - name: REPLICATED_AUTH_HASHKEY
      static_val: '{{ ConfigOption "authentication_type_password_hashkey" }}'
    - name: REPLICATED_AUTH_BLOCKKEY
      static_val: '{{ ConfigOption "authentication_type_password_blockkey" }}'
    ports: []
    volumes: []
    support_files: []
config:
  cmds:
  - name: hashkey
    cmd: random
    args:
    - "64"
    - _0-9a-zA-Z-
  - name: blockkey
    cmd: random
    args:
    - "32"
    - _0-9a-zA-Z-
  - name: publicip
    cmd: publicip
    args: []
  - name: lumberjack_cert
    cmd: cert
    args:
    - "4096"
  - name: lumberjack_cert_autogenerated
    cmd: echo
    args:
    - auto-generated
  groups:
  - name: hostname
    title: Hostname
    description: Ensure this domain name is routable on your network.
    items:
    - name: hostname
      title: Hostname
      description: ""
      recommended: false
      default: ""
      default_cmd: null
      value_cmd:
        name: publicip
        value_at: 0
      data_cmd: null
      when: ""
      type: text
      hidden: false
      affix: ""
      required: true
      items: []
  - name: authentication
    title: Authentication
    description: |
      Have an existing user database to connect to?  Configure it below to replace the default anonymous connections.
    items:
    - name: authentication_type
      title: ""
      description: ""
      recommended: false
      default: authentication_type_anonymous
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: ""
      type: select_one
      hidden: false
      affix: ""
      required: false
      items:
      - name: authentication_type_anonymous
        title: Anonymous
        description: ""
        recommended: false
        default: ""
        default_cmd: null
        value_cmd: null
        data_cmd: null
        when: ""
        type: option
        hidden: false
        affix: ""
        required: false
        items: []
      - name: authentication_type_password
        title: Password
        description: ""
        recommended: true
        default: ""
        default_cmd: null
        value_cmd: null
        data_cmd: null
        when: ""
        type: option
        hidden: false
        affix: ""
        required: false
        items: []
    - name: authentication_type_password_password
      title: Password
      description: ""
      recommended: false
      default: ""
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: authentication_type=authentication_type_password
      type: password
      hidden: false
      affix: ""
      required: false
      items: []
    - name: authentication_support_email
      title: Support Email
      description: Email is displayed on the sign in form.
      recommended: false
      default: ""
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: ""
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: authentication_type_password_hashkey
      title: Hash Key
      description: ""
      recommended: false
      default: ""
      default_cmd: null
      value_cmd:
        name: hashkey
        value_at: 0
      data_cmd: null
      when: authentication_type=authentication_type_password
      type: text
      hidden: true
      affix: ""
      required: false
      items: []
    - name: authentication_type_password_blockkey
      title: Block Key
      description: ""
      recommended: false
      default: ""
      default_cmd: null
      value_cmd:
        name: blockkey
        value_at: 0
      data_cmd: null
      when: authentication_type=authentication_type_password
      type: text
      hidden: true
      affix: ""
      required: false
      items: []
  - name: privacy
    title: Privacy
    description: ""
    items:
    - name: http_enabled
      title: HTTP Enabled
      description: |
        When enabled, Kibana will listen for and respond to requests on the HTTP protocol (port 80).
      recommended: false
      default: "1"
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: ""
      type: bool
      hidden: false
      affix: ""
      required: false
      items: []
    - name: https_enabled
      title: HTTPS Enabled
      description: |
        A valid x509 SSL certificate and private key files are required to use this option. The certificate and key must be in PEM format. The key must be *unencrypted*.
      recommended: true
      default: "0"
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: ""
      type: bool
      hidden: false
      affix: ""
      required: false
      items: []
    - name: ssl_key_file
      title: Private Key File
      description: ""
      recommended: false
      default: ""
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: https_enabled=1
      type: file
      hidden: false
      affix: left
      required: true
      items: []
    - name: ssl_cert_file
      title: Certificate File
      description: ""
      recommended: false
      default: ""
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: https_enabled=1
      type: file
      hidden: false
      affix: right
      required: true
      items: []
  - name: inputs
    title: Inputs
    description: Define inputs for logstash to create
    items:
    - name: inputs_enabled
      title: Choose which inputs to enable for Logstash.
      description: |
        Inputs are how data gets into your Logstash system.  You can enable as many or as few as is relevant to your requirements.
      recommended: false
      default: ""
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: ""
      type: select_many
      hidden: false
      affix: ""
      required: false
      items:
      - name: logstash_input_collectd_enabled
        title: collectd
        description: ""
        recommended: true
        default: "1"
        default_cmd: null
        value_cmd: null
        data_cmd: null
        when: ""
        type: bool
        hidden: false
        affix: ""
        required: false
        items: []
      - name: logstash_input_file_enabled
        title: file
        description: ""
        recommended: false
        default: "0"
        default_cmd: null
        value_cmd: null
        data_cmd: null
        when: ""
        type: bool
        hidden: false
        affix: ""
        required: false
        items: []
      - name: logstash_input_ganglia_enabled
        title: ganglia
        description: ""
        recommended: false
        default: "0"
        default_cmd: null
        value_cmd: null
        data_cmd: null
        when: ""
        type: bool
        hidden: false
        affix: ""
        required: false
        items: []
      - name: logstash_input_generator_enabled
        title: generator
        description: ""
        recommended: false
        default: "0"
        default_cmd: null
        value_cmd: null
        data_cmd: null
        when: ""
        type: bool
        hidden: false
        affix: ""
        required: false
        items: []
      - name: logstash_input_log4j_enabled
        title: log4j
        description: ""
        recommended: false
        default: "0"
        default_cmd: null
        value_cmd: null
        data_cmd: null
        when: ""
        type: bool
        hidden: false
        affix: ""
        required: false
        items: []
      - name: logstash_input_lumberjack_enabled
        title: lumberjack
        description: ""
        recommended: false
        default: "0"
        default_cmd: null
        value_cmd: null
        data_cmd: null
        when: ""
        type: bool
        hidden: false
        affix: ""
        required: false
        items: []
      - name: logstash_input_rabbitmq_enabled
        title: rabbitmq
        description: ""
        recommended: false
        default: "0"
        default_cmd: null
        value_cmd: null
        data_cmd: null
        when: ""
        type: bool
        hidden: false
        affix: ""
        required: false
        items: []
      - name: logstash_input_snmp_enabled
        title: snmp
        description: ""
        recommended: false
        default: "0"
        default_cmd: null
        value_cmd: null
        data_cmd: null
        when: ""
        type: bool
        hidden: false
        affix: ""
        required: false
        items: []
      - name: logstash_input_sqs_enabled
        title: sqs
        description: ""
        recommended: false
        default: "0"
        default_cmd: null
        value_cmd: null
        data_cmd: null
        when: ""
        type: bool
        hidden: false
        affix: ""
        required: false
        items: []
      - name: logstash_input_syslog_enabled
        title: syslog
        description: ""
        recommended: true
        default: "1"
        default_cmd: null
        value_cmd: null
        data_cmd: null
        when: ""
        type: bool
        hidden: false
        affix: ""
        required: false
        items: []
      - name: logstash_input_tcp_enabled
        title: tcp
        description: ""
        recommended: false
        default: "0"
        default_cmd: null
        value_cmd: null
        data_cmd: null
        when: ""
        type: bool
        hidden: false
        affix: ""
        required: false
        items: []
      - name: logstash_input_udp_enabled
        title: udp
        description: ""
        recommended: false
        default: "0"
        default_cmd: null
        value_cmd: null
        data_cmd: null
        when: ""
        type: bool
        hidden: false
        affix: ""
        required: false
        items: []
      - name: logstash_input_unix_enabled
        title: unix socket
        description: ""
        recommended: false
        default: "0"
        default_cmd: null
        value_cmd: null
        data_cmd: null
        when: ""
        type: bool
        hidden: false
        affix: ""
        required: false
        items: []
      - name: logstash_input_websocket_enabled
        title: websocket
        description: ""
        recommended: false
        default: "0"
        default_cmd: null
        value_cmd: null
        data_cmd: null
        when: ""
        type: bool
        hidden: false
        affix: ""
        required: false
        items: []
      - name: logstash_input_zeromq_enabled
        title: zeromq
        description: ""
        recommended: false
        default: "0"
        default_cmd: null
        value_cmd: null
        data_cmd: null
        when: ""
        type: bool
        hidden: false
        affix: ""
        required: false
        items: []
    - name: logstash_input_collectd_port
      title: Collectd listen port
      description: ""
      recommended: false
      default: "25826"
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_input_collectd_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: logstash_input_ganglia_port
      title: Ganglia listen port
      description: ""
      recommended: false
      default: "8649"
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_input_ganglia_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: logstash_input_file_path
      title: File input path
      description: ""
      recommended: false
      default: ""
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_input_file_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: logstash_input_generator_count
      title: Generator count
      description: ""
      recommended: false
      default: "1000"
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_input_generator_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: logstash_input_log4j_port
      title: Log4j listen port
      description: ""
      recommended: false
      default: "4560"
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_input_log4j_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: logstash_input_lumberjack_port
      title: Lumberjack port
      description: ""
      recommended: false
      default: ""
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_input_lumberjack_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: logstash_input_lumberjack_key_file
      title: Lumberjack private key file
      description: ""
      recommended: false
      default: ""
      default_cmd: null
      value_cmd:
        name: lumberjack_cert_autogenerated
        value_at: 0
      data_cmd:
        name: lumberjack_cert
        value_at: 0
      when: logstash_input_lumberjack_enabled=1
      type: file
      hidden: false
      affix: left
      required: false
      items: []
    - name: logstash_input_lumberjack_cert_file
      title: Lumberjack cert file
      description: ""
      recommended: false
      default: ""
      default_cmd: null
      value_cmd:
        name: lumberjack_cert_autogenerated
        value_at: 0
      data_cmd:
        name: lumberjack_cert
        value_at: 1
      when: logstash_input_lumberjack_enabled=1
      type: file
      hidden: false
      affix: right
      required: false
      items: []
    - name: logstash_input_rabbitmq_host
      title: RabbitMQ host
      description: ""
      recommended: false
      default: ""
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_input_rabbitmq_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: logstash_input_rabbitmq_port
      title: RabbitMQ port
      description: ""
      recommended: false
      default: "5672"
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_input_rabbitmq_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: logstash_input_snmp_port
      title: SNMP listen port
      description: ""
      recommended: false
      default: "1062"
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_input_snmp_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: logstash_input_sqs_queue
      title: SQS queue
      description: ""
      recommended: false
      default: ""
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_input_sqs_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: logstash_input_sqs_aws_access_key
      title: SQS AWS access key id and secret access key
      description: ""
      recommended: false
      default: ""
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_input_sqs_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: logstash_input_sqs_aws_secret_key
      title: SQS AWS secret access key
      description: ""
      recommended: false
      default: ""
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_input_sqs_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: logstash_input_syslog_port
      title: Syslog listen port
      description: ""
      recommended: false
      default: "514"
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_input_syslog_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: logstash_input_tcp_port
      title: TCP listen port
      description: ""
      recommended: false
      default: ""
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_input_tcp_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: logstash_input_udp_port
      title: UDP listen port
      description: ""
      recommended: false
      default: ""
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_input_udp_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: logstash_input_unix_path
      title: Path of unix socket
      description: ""
      recommended: false
      default: ""
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_input_unix_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: logstash_input_websocket_url
      title: Websocket URL
      description: ""
      recommended: false
      default: 0.0.0.0
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_input_websocket_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: logstash_input_zeromq_address
      title: ZeroMQ address
      description: ""
      recommended: false
      default: tcp://*:2120
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_input_zeromq_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: logstash_input_zeromq_topology
      title: ZeroMQ topology
      description: one of ["pushpull", "pubsub", "pair"]
      recommended: false
      default: ""
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_input_zeromq_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
  - name: outputs
    title: Outputs
    description: Define outputs for logstash to create
    items:
    - name: outputs_enabled
      title: Choose which outputs to enable for Logstash.
      description: |
        You can enable as many or as few as is relevant to your requirements. Elasticsearch is enabled by default.
      recommended: false
      default: ""
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: ""
      type: select_many
      hidden: false
      affix: ""
      required: false
      items:
      - name: logstash_output_rollbar_enabled
        title: rollbar
        description: ""
        recommended: false
        default: "0"
        default_cmd: null
        value_cmd: null
        data_cmd: null
        when: ""
        type: bool
        hidden: false
        affix: ""
        required: false
        items: []
    - name: logstash_output_rollbar_access_token
      title: Rollbar access token
      description: ""
      recommended: false
      default: ""
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_output_rollbar_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: logstash_output_rollbar_environment
      title: Rollbar project environment
      description: ""
      recommended: false
      default: production
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_output_rollbar_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: logstash_output_rollbar_level
      title: Rollbar log level
      description: ""
      recommended: false
      default: info
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_output_rollbar_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
    - name: logstash_output_rollbar_format
      title: Rollbar format string
      description: ""
      recommended: false
      default: '%{message}'
      default_cmd: null
      value_cmd: null
      data_cmd: null
      when: logstash_output_rollbar_enabled=1
      type: text
      hidden: false
      affix: ""
      required: false
      items: []
